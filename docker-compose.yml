services:
  app:
    build:
      context: .
    container_name: tgbot
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      WEATHER_API_KEY: ${WEATHER_API_KEY}
      PG_HOST: ${PG_HOST}
      PG_PORT: ${PG_PORT}
      PG_PASS: ${PG_PASS}
      PG_USER: ${PG_USER}
      PG_NAME: ${PG_NAME}
    env_file:
      - ./.env
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:17.6-alpine3.21
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_DB: ${PG_NAME}
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pg-data:/var/lib/postgresql/data

volumes:
  pg-data: