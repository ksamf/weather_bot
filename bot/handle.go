package bot

import (
	"github.com/allegro/bigcache"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func handleUpdate(update tgbotapi.Update, bot *tgbotapi.BotAPI, cacheWeather, cacheForecast *bigcache.BigCache) {
	if update.Message == nil || !update.Message.IsCommand() {
	}

	msg := tgbotapi.NewMessage(update.Message.Chat.ID, "")

	switch update.Message.Command() {
	case "start":
		msg.Text = "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã üå§\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /w <–≥–æ—Ä–æ–¥>, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É.\n–ò—Å–æ–ª—å–∑—É–π /h <n> —á—Ç–æ –±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ n –∑–∞–ø—Ä–æ—Å—ã\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /f <–≥–æ—Ä–æ–¥>, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã."
	case "w":
		city := update.Message.CommandArguments()
		WeatherCommand(update.Message.Chat.ID, city, &msg, cacheWeather)

	case "h":
		limit := update.Message.CommandArguments()
		HistoryCommand(update.Message.Chat.ID, limit, &msg)

	case "f":
		city := update.Message.CommandArguments()
		ForecastCommand(city, &msg, cacheForecast)
	}
	if _, err := bot.Send(msg); err != nil {
		panic(err)
	}

}
